{
  "openapi": "3.0.0",
  "info": {
    "title": "API de Pedidos",
    "version": "1.0.0",
    "description": "API para gerenciar pedidos em uma lanchonete"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Servidor local"
    }
  ],
  "paths": {
    "/pedidos": {
      "post": {
        "summary": "Cria um novo pedido",
        "description": "Cria um pedido validando o cliente pelo CPF e os itens (produtos) por ID.",
        "tags": ["Pedidos"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PedidoRequest" },
              "example": {
                "clienteCPF": "12345678900",
                "itens": [
                  { "produtoId": "1", "quantidade": 2 },
                  { "produtoId": "2", "quantidade": 1 }
                ],
                "status": "pendente"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pedido criado com sucesso",
            "content": {
              "application/json": {
                "example": {
                  "id": "1",
                  "clienteCPF": "12345678900",
                  "itens": [
                    { "produtoId": "1", "quantidade": 2 },
                    { "produtoId": "2", "quantidade": 1 }
                  ],
                  "status": "pendente"
                }
              }
            }
          },
          "400": { "description": "Cliente ou produto inválido" },
          "500": { "description": "Erro ao criar pedido" }
        }
      },
      "get": {
        "summary": "Lista os pedidos",
        "description": "Retorna uma lista de todos os pedidos",
        "tags": ["Pedidos"],
        "responses": {
          "200": {
            "description": "Lista de pedidos retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PedidoResponse" }
                }
              }
            }
          },
          "500": { "description": "Erro ao listar pedidos" }
        }
      }
    },
    "/pedidos/{id}": {
      "get": {
        "summary": "Busca pedido por ID",
        "description": "Retorna os detalhes de um pedido específico",
        "tags": ["Pedidos"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": { "type": "string" },
            "description": "ID do pedido a ser buscado"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do pedido retornados com sucesso",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PedidoResponse" }
              }
            }
          },
          "404": { "description": "Pedido não encontrado" },
          "500": { "description": "Erro ao buscar pedido" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PedidoRequest": {
        "type": "object",
        "properties": {
          "clienteCPF": { "type": "string", "example": "12345678900" },
          "itens": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Item" }
          },
          "status": {
            "type": "string",
            "enum": ["pendente", "em_preparacao", "pronto", "entregue"],
            "example": "pendente"
          }
        },
        "required": ["clienteCPF", "itens", "status"]
      },
      "PedidoResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "example": "1" },
          "clienteCPF": { "type": "string", "example": "12345678900" },
          "itens": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Item" }
          },
          "status": {
            "type": "string",
            "enum": ["pendente", "em_preparacao", "pronto", "entregue"],
            "example": "pendente"
          }
        }
      },
      "Item": {
        "type": "object",
        "properties": {
          "produtoId": { "type": "string", "example": "1" },
          "quantidade": { "type": "integer", "example": 2 }
        },
        "required": ["produtoId", "quantidade"]
      }
    }
  }
}
